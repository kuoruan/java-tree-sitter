plugins {
    id "java-library"
    id "maven-publish"
    id "com.jfrog.bintray" version "1.8.5"
}

group = "io.codiga"
version = "1.1.2"

repositories {
    mavenLocal()
    mavenCentral()
}

String sharedObject = "libjava-tree-sitter"

task buildSharedObject {
    inputs.file "lib/ai_serenade_treesitter_Languages.cc"
    inputs.file "lib/ai_serenade_treesitter_Languages.h"
    inputs.file "lib/ai_serenade_treesitter_TreeSitter.cc"
    inputs.file "lib/ai_serenade_treesitter_TreeSitter.h"
    outputs.file "${sharedObject}.dylib"
    outputs.file "${sharedObject}.so"
    outputs.file "${sharedObject}.dll"

    doLast {
        exec {
            commandLine "./build.py", "-a", "${System.getProperty("os.arch")}", "src/test/tree-sitter-python", "-o", "${sharedObject}"
        }
    }
}

clean {
    delete "${sharedObject}.dylib"
    delete "${sharedObject}.so"
    delete "${sharedObject}.dll"
}

compileJava {
    options.compilerArgs += ["-h", "${project.projectDir.toString()}/lib"]
}

compileTestJava {
    dependsOn buildSharedObject
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    publications = ['maven']
    pkg {
        repo = "maven"
        name = "java-tree-sitter"
        userOrg = "serenadeai"
        licenses = ["MIT"]
        vcsUrl = "https://github.com/serenadeai/java-tree-sitter"
        version {
            name = project.getVersion()
        }
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging {
        events "passed", "skipped", "failed"
    }

    environment "JAVA_TREE_SITTER", "${project.projectDir.toString()}/libjava-tree-sitter.${System.getProperty("os.name").equalsIgnoreCase("mac os x") ? "dylib" : "so"}"
}
